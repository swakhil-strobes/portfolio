name: Build and Push dev image to ECR

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - "development"

jobs:
  build-and-push-image:
    if: (github.event_name == 'push')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ECR_WRITE_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.ECR_WRITE_AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v10
        id: verify-changed-files
        with:
          files: |
             requirements.txt

      - name: Build, tag, and push image to Amazon ECR
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        env:
          ECR_REGISTRY: ${{ secrets.ECR_ACCOUNT_URL }}
          ECR_REPOSITORY: portfolio
          IMAGE_TAG: dev
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
      - name: Build, tag, and push image to Amazon ECR
        if: steps.verify-changed-files.outputs.files_changed != 'true'
        env:
          ECR_REGISTRY: ${{ secrets.ECR_ACCOUNT_URL }}
          ECR_REPOSITORY: portfolio
          IMAGE_TAG: dev
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile.cache .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
  # deploy-service-update:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push-image

  #   steps:
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.ECS_AWS_ACCESS_KEY }}
  #         aws-secret-access-key: ${{ secrets.ECS_AWS_SECRET_KEY }}
  #         aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

  #     - name: Update service.
  #       run: |
  #         aws ecs update-service --cluster "portfolio-services-cluster" --service "portfolio" --task-definition "portfolio" --force-new-deployment